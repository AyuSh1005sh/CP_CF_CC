#include <bits/stdc++.h>
using namespace std;

bool isValid(int row,int col,int maxRow,int maxCol){
    if(row>=0 and row<maxRow and col>=0 and col<maxCol){
        return true;
    }
    return false;
}
int maxMoves(vector<vector<int>>grid){
    int maxRow=grid.size();
    int maxCol=grid[0].size();
    vector<vector<int>>dp(maxRow,vector<int>(maxCol,0));
    for(int row=0;row<maxRow;row++){
        dp[row][0]=1;
        
    }
    for(int row=0;row<maxRow;row++){
        for(int col=1;col<maxCol;col++){
            if(isValid(row-1,col-1,maxRow,maxCol) and grid[row-1][col-1]<grid[row][col] and dp[row-1][col-1]!=0){
                dp[row][col]=1+dp[row-1][col-1];
            }
            if(isValid(row,col-1,maxRow,maxCol) and grid[row][col-1]<grid[row][col] and dp[row][col-1]!=0){
                dp[row][col]=1+dp[row][col-1];
            }
            if(isValid(row+1,col-1,maxRow,maxCol) and grid[row+1][col-1]<grid[row][col] and dp[row+1][col-1]!=0){
                dp[row][col]=1+dp[row+1][col-1];
            }
        }
    }
    int ans=0;
    for(int row=0;row<maxRow;row++){
        ans=max(ans,dp[row][maxCol-1]);
    }
    if(ans==0)return 0;
    return ans-1;
    
}

int main() {

	int n,m;
	cin>>n>>m;
	vector<vector<int>>grid;
	for(int i=0;i<n;i++){
	    vector<int>temp;
	    for(int j=0;j<m;j++){
	        int x;
	        cin>>x;
	        temp.push_back(x);
	    }
	    grid.push_back(temp);
	}
	cout<<maxMoves(grid)<<endl;
	return 0;
}
